
PWC.elf: formato do arquivo elf32-avr

Seções:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000001ce  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000002  00800060  000001ce  00000242  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000011  00000000  00000000  00000244  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000258  2**2
                  CONTENTS, READONLY
  4 .debug_info   0000048c  00000000  00000000  00000294  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 0000044e  00000000  00000000  00000720  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   0000001a  00000000  00000000  00000b6e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    0000017a  00000000  00000000  00000b88  2**0
                  CONTENTS, READONLY, DEBUGGING

Desmontagem da seção .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	24 c0       	rjmp	.+72     	; 0x4c <__bad_interrupt>
   4:	23 c0       	rjmp	.+70     	; 0x4c <__bad_interrupt>
   6:	22 c0       	rjmp	.+68     	; 0x4c <__bad_interrupt>
   8:	63 c0       	rjmp	.+198    	; 0xd0 <__vector_4>
   a:	20 c0       	rjmp	.+64     	; 0x4c <__bad_interrupt>
   c:	1f c0       	rjmp	.+62     	; 0x4c <__bad_interrupt>
   e:	1e c0       	rjmp	.+60     	; 0x4c <__bad_interrupt>
  10:	1d c0       	rjmp	.+58     	; 0x4c <__bad_interrupt>
  12:	1c c0       	rjmp	.+56     	; 0x4c <__bad_interrupt>
  14:	1b c0       	rjmp	.+54     	; 0x4c <__bad_interrupt>
  16:	1a c0       	rjmp	.+52     	; 0x4c <__bad_interrupt>
  18:	19 c0       	rjmp	.+50     	; 0x4c <__bad_interrupt>
  1a:	18 c0       	rjmp	.+48     	; 0x4c <__bad_interrupt>
  1c:	17 c0       	rjmp	.+46     	; 0x4c <__bad_interrupt>
  1e:	16 c0       	rjmp	.+44     	; 0x4c <__bad_interrupt>
  20:	15 c0       	rjmp	.+42     	; 0x4c <__bad_interrupt>
  22:	14 c0       	rjmp	.+40     	; 0x4c <__bad_interrupt>
  24:	13 c0       	rjmp	.+38     	; 0x4c <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61

00000032 <__do_copy_data>:
  32:	10 e0       	ldi	r17, 0x00	; 0
  34:	a0 e6       	ldi	r26, 0x60	; 96
  36:	b0 e0       	ldi	r27, 0x00	; 0
  38:	ee ec       	ldi	r30, 0xCE	; 206
  3a:	f1 e0       	ldi	r31, 0x01	; 1
  3c:	02 c0       	rjmp	.+4      	; 0x42 <__SREG__+0x3>
  3e:	05 90       	lpm	r0, Z+
  40:	0d 92       	st	X+, r0
  42:	a2 36       	cpi	r26, 0x62	; 98
  44:	b1 07       	cpc	r27, r17
  46:	d9 f7       	brne	.-10     	; 0x3e <__SP_H__>
  48:	70 d0       	rcall	.+224    	; 0x12a <main>
  4a:	bf c0       	rjmp	.+382    	; 0x1ca <_exit>

0000004c <__bad_interrupt>:
  4c:	d9 cf       	rjmp	.-78     	; 0x0 <__vectors>

0000004e <disable_all_interrupts>:
  4e:	08 95       	ret

00000050 <enable_all_interrupts>:
  50:	08 95       	ret

00000052 <bit_clear>:
  52:	08 95       	ret

00000054 <bit_set>:
  54:	08 95       	ret

00000056 <bit_toggle>:
  56:	08 95       	ret

00000058 <bit_read>:
  58:	21 e0       	ldi	r18, 0x01	; 1
  5a:	30 e0       	ldi	r19, 0x00	; 0
  5c:	02 c0       	rjmp	.+4      	; 0x62 <bit_read+0xa>
  5e:	22 0f       	add	r18, r18
  60:	33 1f       	adc	r19, r19
  62:	6a 95       	dec	r22
  64:	e2 f7       	brpl	.-8      	; 0x5e <bit_read+0x6>
  66:	a9 01       	movw	r20, r18
  68:	48 23       	and	r20, r24
  6a:	59 23       	and	r21, r25
  6c:	81 e0       	ldi	r24, 0x01	; 1
  6e:	42 17       	cp	r20, r18
  70:	53 07       	cpc	r21, r19
  72:	09 f0       	breq	.+2      	; 0x76 <bit_read+0x1e>
  74:	80 e0       	ldi	r24, 0x00	; 0
  76:	08 95       	ret

00000078 <wait_for_bit>:
  78:	21 e0       	ldi	r18, 0x01	; 1
  7a:	30 e0       	ldi	r19, 0x00	; 0
  7c:	02 c0       	rjmp	.+4      	; 0x82 <wait_for_bit+0xa>
  7e:	22 0f       	add	r18, r18
  80:	33 1f       	adc	r19, r19
  82:	6a 95       	dec	r22
  84:	e2 f7       	brpl	.-8      	; 0x7e <wait_for_bit+0x6>
  86:	bc 01       	movw	r22, r24
  88:	62 23       	and	r22, r18
  8a:	73 23       	and	r23, r19
  8c:	91 e0       	ldi	r25, 0x01	; 1
  8e:	62 17       	cp	r22, r18
  90:	73 07       	cpc	r23, r19
  92:	09 f0       	breq	.+2      	; 0x96 <wait_for_bit+0x1e>
  94:	90 e0       	ldi	r25, 0x00	; 0
  96:	49 13       	cpse	r20, r25
  98:	fe cf       	rjmp	.-4      	; 0x96 <wait_for_bit+0x1e>
  9a:	08 95       	ret

0000009c <reg_clear>:
  9c:	08 95       	ret

0000009e <config_power_saving>:
  9e:	85 b7       	in	r24, 0x35	; 53
  a0:	8f 78       	andi	r24, 0x8F	; 143
  a2:	80 63       	ori	r24, 0x30	; 48
  a4:	85 bf       	out	0x35, r24	; 53
  a6:	08 95       	ret

000000a8 <config_idle>:
  a8:	85 b7       	in	r24, 0x35	; 53
  aa:	8f 78       	andi	r24, 0x8F	; 143
  ac:	85 bf       	out	0x35, r24	; 53
  ae:	08 95       	ret

000000b0 <config_standby>:
  b0:	85 b7       	in	r24, 0x35	; 53
  b2:	8f 78       	andi	r24, 0x8F	; 143
  b4:	80 66       	ori	r24, 0x60	; 96
  b6:	85 bf       	out	0x35, r24	; 53
  b8:	08 95       	ret

000000ba <put_to_sleep>:
  ba:	c9 df       	rcall	.-110    	; 0x4e <disable_all_interrupts>
  bc:	85 b7       	in	r24, 0x35	; 53
  be:	80 68       	ori	r24, 0x80	; 128
  c0:	85 bf       	out	0x35, r24	; 53
  c2:	c6 df       	rcall	.-116    	; 0x50 <enable_all_interrupts>
  c4:	88 95       	sleep
  c6:	08 95       	ret

000000c8 <wake_up>:
  c8:	85 b7       	in	r24, 0x35	; 53
  ca:	8f 77       	andi	r24, 0x7F	; 127
  cc:	85 bf       	out	0x35, r24	; 53
  ce:	08 95       	ret

000000d0 <__vector_4>:
  d0:	1f 92       	push	r1
  d2:	0f 92       	push	r0
  d4:	0f b6       	in	r0, 0x3f	; 63
  d6:	0f 92       	push	r0
  d8:	11 24       	eor	r1, r1
  da:	2f 93       	push	r18
  dc:	3f 93       	push	r19
  de:	4f 93       	push	r20
  e0:	5f 93       	push	r21
  e2:	6f 93       	push	r22
  e4:	7f 93       	push	r23
  e6:	8f 93       	push	r24
  e8:	9f 93       	push	r25
  ea:	af 93       	push	r26
  ec:	bf 93       	push	r27
  ee:	ef 93       	push	r30
  f0:	ff 93       	push	r31
  f2:	84 b5       	in	r24, 0x24	; 36
  f4:	90 e0       	ldi	r25, 0x00	; 0
  f6:	d2 df       	rcall	.-92     	; 0x9c <reg_clear>
  f8:	81 e0       	ldi	r24, 0x01	; 1
  fa:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__data_start>
  fe:	88 b7       	in	r24, 0x38	; 56
 100:	66 e0       	ldi	r22, 0x06	; 6
 102:	70 e0       	ldi	r23, 0x00	; 0
 104:	90 e0       	ldi	r25, 0x00	; 0
 106:	a6 df       	rcall	.-180    	; 0x54 <bit_set>
 108:	ff 91       	pop	r31
 10a:	ef 91       	pop	r30
 10c:	bf 91       	pop	r27
 10e:	af 91       	pop	r26
 110:	9f 91       	pop	r25
 112:	8f 91       	pop	r24
 114:	7f 91       	pop	r23
 116:	6f 91       	pop	r22
 118:	5f 91       	pop	r21
 11a:	4f 91       	pop	r20
 11c:	3f 91       	pop	r19
 11e:	2f 91       	pop	r18
 120:	0f 90       	pop	r0
 122:	0f be       	out	0x3f, r0	; 63
 124:	0f 90       	pop	r0
 126:	1f 90       	pop	r1
 128:	18 95       	reti

0000012a <main>:
 12a:	82 b5       	in	r24, 0x22	; 34
 12c:	63 e0       	ldi	r22, 0x03	; 3
 12e:	70 e0       	ldi	r23, 0x00	; 0
 130:	90 e0       	ldi	r25, 0x00	; 0
 132:	90 df       	rcall	.-224    	; 0x54 <bit_set>
 134:	89 b7       	in	r24, 0x39	; 57
 136:	67 e0       	ldi	r22, 0x07	; 7
 138:	70 e0       	ldi	r23, 0x00	; 0
 13a:	90 e0       	ldi	r25, 0x00	; 0
 13c:	8a df       	rcall	.-236    	; 0x52 <bit_clear>
 13e:	89 b7       	in	r24, 0x39	; 57
 140:	40 e0       	ldi	r20, 0x00	; 0
 142:	67 e0       	ldi	r22, 0x07	; 7
 144:	70 e0       	ldi	r23, 0x00	; 0
 146:	90 e0       	ldi	r25, 0x00	; 0
 148:	97 df       	rcall	.-210    	; 0x78 <wait_for_bit>
 14a:	89 b7       	in	r24, 0x39	; 57
 14c:	66 e0       	ldi	r22, 0x06	; 6
 14e:	70 e0       	ldi	r23, 0x00	; 0
 150:	90 e0       	ldi	r25, 0x00	; 0
 152:	80 df       	rcall	.-256    	; 0x54 <bit_set>
 154:	89 b7       	in	r24, 0x39	; 57
 156:	41 e0       	ldi	r20, 0x01	; 1
 158:	66 e0       	ldi	r22, 0x06	; 6
 15a:	70 e0       	ldi	r23, 0x00	; 0
 15c:	90 e0       	ldi	r25, 0x00	; 0
 15e:	8c df       	rcall	.-232    	; 0x78 <wait_for_bit>
 160:	88 b7       	in	r24, 0x38	; 56
 162:	66 e0       	ldi	r22, 0x06	; 6
 164:	70 e0       	ldi	r23, 0x00	; 0
 166:	90 e0       	ldi	r25, 0x00	; 0
 168:	75 df       	rcall	.-278    	; 0x54 <bit_set>
 16a:	84 b5       	in	r24, 0x24	; 36
 16c:	90 e0       	ldi	r25, 0x00	; 0
 16e:	96 df       	rcall	.-212    	; 0x9c <reg_clear>
 170:	85 b5       	in	r24, 0x25	; 37
 172:	62 e0       	ldi	r22, 0x02	; 2
 174:	70 e0       	ldi	r23, 0x00	; 0
 176:	90 e0       	ldi	r25, 0x00	; 0
 178:	6c df       	rcall	.-296    	; 0x52 <bit_clear>
 17a:	85 b5       	in	r24, 0x25	; 37
 17c:	61 e0       	ldi	r22, 0x01	; 1
 17e:	70 e0       	ldi	r23, 0x00	; 0
 180:	90 e0       	ldi	r25, 0x00	; 0
 182:	67 df       	rcall	.-306    	; 0x52 <bit_clear>
 184:	85 b5       	in	r24, 0x25	; 37
 186:	60 e0       	ldi	r22, 0x00	; 0
 188:	70 e0       	ldi	r23, 0x00	; 0
 18a:	90 e0       	ldi	r25, 0x00	; 0
 18c:	63 df       	rcall	.-314    	; 0x54 <bit_set>
 18e:	78 94       	sei
 190:	8b df       	rcall	.-234    	; 0xa8 <config_idle>
 192:	84 b3       	in	r24, 0x14	; 20
 194:	65 e0       	ldi	r22, 0x05	; 5
 196:	70 e0       	ldi	r23, 0x00	; 0
 198:	90 e0       	ldi	r25, 0x00	; 0
 19a:	5c df       	rcall	.-328    	; 0x54 <bit_set>
 19c:	84 b3       	in	r24, 0x14	; 20
 19e:	41 e0       	ldi	r20, 0x01	; 1
 1a0:	65 e0       	ldi	r22, 0x05	; 5
 1a2:	70 e0       	ldi	r23, 0x00	; 0
 1a4:	90 e0       	ldi	r25, 0x00	; 0
 1a6:	68 df       	rcall	.-304    	; 0x78 <wait_for_bit>
 1a8:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__data_start>
 1ac:	81 11       	cpse	r24, r1
 1ae:	01 c0       	rjmp	.+2      	; 0x1b2 <main+0x88>
 1b0:	ff cf       	rjmp	.-2      	; 0x1b0 <main+0x86>
 1b2:	83 df       	rcall	.-250    	; 0xba <put_to_sleep>
 1b4:	85 b7       	in	r24, 0x35	; 53
 1b6:	8f 77       	andi	r24, 0x7F	; 127
 1b8:	85 bf       	out	0x35, r24	; 53
 1ba:	85 b3       	in	r24, 0x15	; 21
 1bc:	65 e0       	ldi	r22, 0x05	; 5
 1be:	70 e0       	ldi	r23, 0x00	; 0
 1c0:	90 e0       	ldi	r25, 0x00	; 0
 1c2:	49 df       	rcall	.-366    	; 0x56 <bit_toggle>
 1c4:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__data_start>
 1c8:	ef cf       	rjmp	.-34     	; 0x1a8 <main+0x7e>

000001ca <_exit>:
 1ca:	f8 94       	cli

000001cc <__stop_program>:
 1cc:	ff cf       	rjmp	.-2      	; 0x1cc <__stop_program>
